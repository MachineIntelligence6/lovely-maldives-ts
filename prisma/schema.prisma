// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// TYPES
type Facts {
  title    String
  icon      String
  subTags    String[]
  stars    Int?
}

type Hotel {
  id      String
  title   String
  ratings String
  image  String
}

type Menus {
  menu   String
  link   String
  icon   String?
}

type Columns {
  title   String
  menus   Menus[]
}

type Sections {
  type         String
  title        String?
  ratings      String?
  description  String?
  images  String[]
  facts        Facts[]
}

type ResortSections {
  type   String
  title  String?
  description  String?
  hotels Hotel[]
}

type OurServices {
  title       String
  captionText       String
  icon        String
  bgImage     String
}

type Cards {
  image  String
  title  String
}

// type Collection {
//   title  String
//   ids String[]
// }

type Brand {
  logo String
  tag   String
  ratings String
}

type Policies {
  question   String
  answer     String
}

type Questions {
  question   String
  answer     String
}

type FaqsWithCategory {
  category   String
  questions  Questions[]
}


// ADMIN USER MODEL
model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String @unique
  role     String
  status   String @default("Pending")
  isAdmin  Boolean @default(false)
  password String
}


// HEADER SECTION MODEL
model Header {
    id      String  @id @default(auto()) @map("_id") @db.ObjectId
    heroLogo    String
    otherLogo    String
    heroWidth   String
    otherWidth   String
    heroHeight  String
    otherHeight  String
    heroBgcolor String
    otherBgcolor String
    menus   Menus[]
    menusBgcolor String
    homeBgId    String @map("homeBg_id") @db.ObjectId
    homeBg      HomeBg  @relation(fields: [homeBgId], references: [id])
}

// FOOTER SECTION MODEL
model Footer {
    id        String  @id @default(auto()) @map("_id") @db.ObjectId
    title     String  
    columns   Columns[]
    homeBgId    String @map("homeBg_id") @db.ObjectId
    homeBg      HomeBg  @relation(fields: [homeBgId], references: [id])
}

// ABOUT MALDVES SECTION MODEL
model AboutMaldives {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    title       String
    description String
}

// ABOUT US SECTION MODEL
model AboutUs {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    title       String
    description String
}

// ADD HOTEL MODEL
model Hotels {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    title       String @unique
    ratings     String?
    sections    Sections[]
    createdAt  DateTime   @default(now())
    updatedAt  DateTime   @updatedAt
}

model HotelBookings {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    userEmail   String @unique
    hotelId     String?
}

// RESORT FILTERS MODEL
model ResortFilters {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    type        String
    filter      String
}

// ADD BLOG MODEL
model Blogs {
    id           String  @id @default(auto()) @map("_id") @db.ObjectId
    title        String
    category     String
    description String
    coverImage  String
}

// ADD BLOG MODEL
model CategoryBlogs {
    id           String  @id @default(auto()) @map("_id") @db.ObjectId
    category       String
    ids     String[]
}

// BLOG CATEGORIES MODEL
model BlogCategories {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    category    String
}


// HOME PAGE MODEL
model HomeBg {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    title       String
    subTitle    String?
    bgImages    String[]
    services    Services[]
    wonders     Wonders[]
    collections OurCollections[]
    brands      Brands[]
    aboutMaldivesShort AboutMaldivesShort[]
    aboutUsShort AboutUsShort[]
    socialLinkSection SocialLinkSection[]
    header      Header[]
    footer      Footer[]
    sideImage   SideImage[]
}

model Services {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  subTitle    String
  subTitleColor String
  cardBgcolor   String
  services    OurServices[]
  homeBgId    String @map("homeBg_id") @db.ObjectId
  homeBg      HomeBg  @relation(fields: [homeBgId], references: [id])
}

model Wonders {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  cards       Cards[]
  homeBgId    String @map("homeBg_id") @db.ObjectId
  homeBg      HomeBg  @relation(fields: [homeBgId], references: [id])
}

model Collections {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  image       String
  ratings     String
}

model OurCollections {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  ids         String[]
  homeBgId    String @map("homeBg_id") @db.ObjectId
  homeBg      HomeBg  @relation(fields: [homeBgId], references: [id])
}

model Brands {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  brands      Brand[]
  bgColor     String?
  homeBgId    String @map("homeBg_id") @db.ObjectId
  homeBg      HomeBg  @relation(fields: [homeBgId], references: [id])
}

model SideImage {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  image       String
  homeBgId    String @map("homeBg_id") @db.ObjectId
  homeBg      HomeBg  @relation(fields: [homeBgId], references: [id])
}

model AboutMaldivesShort {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  link        String?
  description String
  homeBgId    String @map("homeBg_id") @db.ObjectId
  homeBg      HomeBg  @relation(fields: [homeBgId], references: [id])
}

model AboutUsShort {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  logo        String
  promisTitle String
  promiseColor String
  cardBgcolor String
  description String
  promises    String[]
  homeBgId    String @map("homeBg_id") @db.ObjectId
  homeBg      HomeBg  @relation(fields: [homeBgId], references: [id])
}

model SocialLinkSection {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  socialMedia   String
  link          String
  image         String
  homeBgId      String @map("homeBg_id") @db.ObjectId
  homeBg        HomeBg  @relation(fields: [homeBgId], references: [id])
}

// RESORT MODEL
model Resorts {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  resortSections   ResortSections[]
}


// THEME CONFIGURATION MODELS
model Theme {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  fontFamily String?
  bgColor    String?
  gradient   String?
}

// TERMS OF USE
model TermsOfUse {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  description String
}

// PRIVACY POLICY
model PrivacyPolicy {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  policies   Policies[]
}

// FAQS MODEL
model FAQS {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  faqs   FaqsWithCategory[]
  description String
}

// EMAIL SUBSCRIPTION MODEL
model Subscribe {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  email      String
  // createdAt  DateTime   @default(now())
  // updatedAt  DateTime   @updatedAt
}

model EmailSubscription {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  email      String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}